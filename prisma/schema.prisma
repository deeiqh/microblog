// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  uuid String @id @default(uuid())
  firstName String @map("first_name")
  lastName String @map("last_name")
  email String @unique
  password String
  createdAt DateTime @default(now()) @map("created_at")
  confirmedAt DateTime @default(now()) @map("confirmed_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  role AccountRole @default(USER)

  posts Post[]
  comments Comment[]
  likedPosts Post[] @relation("post")
  likedComments Comment[] @relation("comment")

  public PublicFields?

  token Token?

  @@map("accounts")
}

model PublicFields {
  uuid String @id @default(uuid())
  account Account @relation(fields: [accountId], references: [uuid])
  accountId String @unique @map("account_id")
  name Boolean @default(true)
  email Boolean @default(true)

  @@map("public_fields")
}

model Post {
  uuid String @id @default(uuid())
  title String
  category String?
  content String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  author Account @relation(fields: [authorId], references: [uuid])
  authorId String @map("author_id")
  likes Account[] @relation("post")

  @@map("posts")
}

model Comment {
  uuid String @id @default(uuid())
  content String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  author Account @relation(fields: [authorId], references: [uuid])
  authorId String @map("author_id")
  likes Account[] @relation("comment")

  @@map("comments")
}

model Token {
  uuid String @id @default(uuid())
  jti String @unique @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")

  account Account @relation(fields: [accountId], references: [uuid])
  accountId String @unique @map("account_id")

  @@map("tokens")
}

enum AccountRole {
  USER
  MODERATOR
}