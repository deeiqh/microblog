// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  uuid String @id @default(uuid())
  first_name String
  last_name String
  email String @unique
  password String
  confirmed_at DateTime?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(dbgenerated("('-infinity'::timestamp)"))
  configurations Json @default("{\"name_public\": false, \"email_public\": false}")
  role Role @default(USER)

  posts Post[]
  comments Comment[]
  liked_posts Post[] @relation("post")
  liked_comments Comment[] @relation("comment")

  token Token?

  @@map("users")
}

model Post {
  uuid String @id @default(uuid())
  title String
  category String?
  content String
  deleted_at DateTime?
  user_id String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(dbgenerated("('-infinity'::timestamp)"))
  likes_number Int @default(0)

  likes User[] @relation("post")

  user User @relation(fields: [user_id], references: [uuid])

  @@map("posts")
}

model Comment {
  uuid String @id @default(uuid())
  content String
  deleted_at DateTime?
  user_id String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(dbgenerated("('-infinity'::timestamp)"))
  likes_number Int @default(0)

  likes User[] @relation("comment")

  user User @relation(fields: [user_id], references: [uuid])
  
  @@map("comments")
}

// model Report {

// }

model Token {
  uuid String @id @default(uuid())
  user_id String @unique

  payload_jti String @unique @default(uuid())
  created_at DateTime @default(now())

  user User @relation(fields: [user_id], references: [uuid])

  @@map("tokens")
}

enum Role {
  USER
  MODERATOR
}